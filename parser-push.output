Terminals unused in grammar

   RETURN
   AND
   DEF
   ELIF
   FOR
   NOT
   OR
   SEMICOLON
   COMMA


State 3 conflicts: 3 shift/reduce
State 14 conflicts: 1 shift/reduce
State 53 conflicts: 6 shift/reduce
State 54 conflicts: 6 shift/reduce
State 55 conflicts: 6 shift/reduce
State 56 conflicts: 6 shift/reduce
State 57 conflicts: 6 shift/reduce
State 58 conflicts: 6 shift/reduce


Grammar

    0 $accept: goal $end

    1 goal: program

    2 program: program statement
    3        | statement

    4 statement: conditional
    5          | DEDENT conditional statement DEDENT DEDENT
    6          | DEDENT
    7          | INDENT statement
    8          | INDENT statement INDENT statement
    9          | INDENT flowcontrol NEWLINE DEDENT DEDENT
   10          | IDENTIFIER EQUALS expression NEWLINE

   11 expression: INTEGER
   12           | FLOAT
   13           | BOOLEAN
   14           | IDENTIFIER
   15           | LPAREN expression RPAREN
   16           | expression PLUS expression
   17           | expression MINUS expression
   18           | expression TIMES expression
   19           | expression DIVIDEDBY expression

   20 conditionalExpr: IDENTIFIER
   21                | INTEGER
   22                | FLOAT
   23                | BOOLEAN
   24                | conditionalExpr LT conditionalExpr
   25                | conditionalExpr GT conditionalExpr
   26                | conditionalExpr LTE conditionalExpr
   27                | conditionalExpr GTE conditionalExpr
   28                | conditionalExpr NEQ conditionalExpr
   29                | conditionalExpr EQ conditionalExpr

   30 conditional: ifelse
   31            | WHILE conditionalExpr COLON NEWLINE

   32 ifelse: IF conditionalExpr COLON NEWLINE
   33       | ELSE COLON NEWLINE

   34 flowcontrol: BREAK


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 10 14 20
INTEGER (259) 11 21
BOOLEAN (260) 13 23
FLOAT (261) 12 22
EQUALS (262) 10
PLUS (263) 16
MINUS (264) 17
TIMES (265) 18
DIVIDEDBY (266) 19
EQ (267) 29
NEQ (268) 28
GT (269) 25
GTE (270) 27
LT (271) 24
LTE (272) 26
RETURN (273)
INDENT (274) 7 8 9
DEDENT (275) 5 6 9
NEWLINE (276) 9 10 31 32 33
IF (277) 32
COLON (278) 31 32 33
AND (279)
BREAK (280) 34
DEF (281)
ELIF (282)
ELSE (283) 33
FOR (284)
NOT (285)
OR (286)
WHILE (287) 31
SEMICOLON (288)
LPAREN (289) 15
RPAREN (290) 15
COMMA (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
goal (38)
    on left: 1, on right: 0
program (39)
    on left: 2 3, on right: 1 2
statement (40)
    on left: 4 5 6 7 8 9 10, on right: 2 3 5 7 8
expression (41)
    on left: 11 12 13 14 15 16 17 18 19, on right: 10 15 16 17 18 19
conditionalExpr (42)
    on left: 20 21 22 23 24 25 26 27 28 29, on right: 24 25 26 27 28
    29 31 32
conditional (43)
    on left: 30 31, on right: 4 5
ifelse (44)
    on left: 32 33, on right: 30
flowcontrol (45)
    on left: 34, on right: 9


State 0

    0 $accept: . goal $end

    IDENTIFIER  shift, and go to state 1
    INDENT      shift, and go to state 2
    DEDENT      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    WHILE       shift, and go to state 6

    goal         go to state 7
    program      go to state 8
    statement    go to state 9
    conditional  go to state 10
    ifelse       go to state 11


State 1

   10 statement: IDENTIFIER . EQUALS expression NEWLINE

    EQUALS  shift, and go to state 12


State 2

    7 statement: INDENT . statement
    8          | INDENT . statement INDENT statement
    9          | INDENT . flowcontrol NEWLINE DEDENT DEDENT

    IDENTIFIER  shift, and go to state 1
    INDENT      shift, and go to state 2
    DEDENT      shift, and go to state 3
    IF          shift, and go to state 4
    BREAK       shift, and go to state 13
    ELSE        shift, and go to state 5
    WHILE       shift, and go to state 6

    statement    go to state 14
    conditional  go to state 10
    ifelse       go to state 11
    flowcontrol  go to state 15


State 3

    5 statement: DEDENT . conditional statement DEDENT DEDENT
    6          | DEDENT .

    IF     shift, and go to state 4
    ELSE   shift, and go to state 5
    WHILE  shift, and go to state 6

    IF        [reduce using rule 6 (statement)]
    ELSE      [reduce using rule 6 (statement)]
    WHILE     [reduce using rule 6 (statement)]
    $default  reduce using rule 6 (statement)

    conditional  go to state 16
    ifelse       go to state 11


State 4

   32 ifelse: IF . conditionalExpr COLON NEWLINE

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 21


State 5

   33 ifelse: ELSE . COLON NEWLINE

    COLON  shift, and go to state 22


State 6

   31 conditional: WHILE . conditionalExpr COLON NEWLINE

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 23


State 7

    0 $accept: goal . $end

    $end  shift, and go to state 24


State 8

    1 goal: program .
    2 program: program . statement

    IDENTIFIER  shift, and go to state 1
    INDENT      shift, and go to state 2
    DEDENT      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    WHILE       shift, and go to state 6

    $default  reduce using rule 1 (goal)

    statement    go to state 25
    conditional  go to state 10
    ifelse       go to state 11


State 9

    3 program: statement .

    $default  reduce using rule 3 (program)


State 10

    4 statement: conditional .

    $default  reduce using rule 4 (statement)


State 11

   30 conditional: ifelse .

    $default  reduce using rule 30 (conditional)


State 12

   10 statement: IDENTIFIER EQUALS . expression NEWLINE

    IDENTIFIER  shift, and go to state 26
    INTEGER     shift, and go to state 27
    BOOLEAN     shift, and go to state 28
    FLOAT       shift, and go to state 29
    LPAREN      shift, and go to state 30

    expression  go to state 31


State 13

   34 flowcontrol: BREAK .

    $default  reduce using rule 34 (flowcontrol)


State 14

    7 statement: INDENT statement .
    8          | INDENT statement . INDENT statement

    INDENT  shift, and go to state 32

    INDENT    [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)


State 15

    9 statement: INDENT flowcontrol . NEWLINE DEDENT DEDENT

    NEWLINE  shift, and go to state 33


State 16

    5 statement: DEDENT conditional . statement DEDENT DEDENT

    IDENTIFIER  shift, and go to state 1
    INDENT      shift, and go to state 2
    DEDENT      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    WHILE       shift, and go to state 6

    statement    go to state 34
    conditional  go to state 10
    ifelse       go to state 11


State 17

   20 conditionalExpr: IDENTIFIER .

    $default  reduce using rule 20 (conditionalExpr)


State 18

   21 conditionalExpr: INTEGER .

    $default  reduce using rule 21 (conditionalExpr)


State 19

   23 conditionalExpr: BOOLEAN .

    $default  reduce using rule 23 (conditionalExpr)


State 20

   22 conditionalExpr: FLOAT .

    $default  reduce using rule 22 (conditionalExpr)


State 21

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   25                | conditionalExpr . GT conditionalExpr
   26                | conditionalExpr . LTE conditionalExpr
   27                | conditionalExpr . GTE conditionalExpr
   28                | conditionalExpr . NEQ conditionalExpr
   29                | conditionalExpr . EQ conditionalExpr
   32 ifelse: IF conditionalExpr . COLON NEWLINE

    EQ     shift, and go to state 35
    NEQ    shift, and go to state 36
    GT     shift, and go to state 37
    GTE    shift, and go to state 38
    LT     shift, and go to state 39
    LTE    shift, and go to state 40
    COLON  shift, and go to state 41


State 22

   33 ifelse: ELSE COLON . NEWLINE

    NEWLINE  shift, and go to state 42


State 23

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   25                | conditionalExpr . GT conditionalExpr
   26                | conditionalExpr . LTE conditionalExpr
   27                | conditionalExpr . GTE conditionalExpr
   28                | conditionalExpr . NEQ conditionalExpr
   29                | conditionalExpr . EQ conditionalExpr
   31 conditional: WHILE conditionalExpr . COLON NEWLINE

    EQ     shift, and go to state 35
    NEQ    shift, and go to state 36
    GT     shift, and go to state 37
    GTE    shift, and go to state 38
    LT     shift, and go to state 39
    LTE    shift, and go to state 40
    COLON  shift, and go to state 43


State 24

    0 $accept: goal $end .

    $default  accept


State 25

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 26

   14 expression: IDENTIFIER .

    $default  reduce using rule 14 (expression)


State 27

   11 expression: INTEGER .

    $default  reduce using rule 11 (expression)


State 28

   13 expression: BOOLEAN .

    $default  reduce using rule 13 (expression)


State 29

   12 expression: FLOAT .

    $default  reduce using rule 12 (expression)


State 30

   15 expression: LPAREN . expression RPAREN

    IDENTIFIER  shift, and go to state 26
    INTEGER     shift, and go to state 27
    BOOLEAN     shift, and go to state 28
    FLOAT       shift, and go to state 29
    LPAREN      shift, and go to state 30

    expression  go to state 44


State 31

   10 statement: IDENTIFIER EQUALS expression . NEWLINE
   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . TIMES expression
   19           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDEDBY  shift, and go to state 48
    NEWLINE    shift, and go to state 49


State 32

    8 statement: INDENT statement INDENT . statement

    IDENTIFIER  shift, and go to state 1
    INDENT      shift, and go to state 2
    DEDENT      shift, and go to state 3
    IF          shift, and go to state 4
    ELSE        shift, and go to state 5
    WHILE       shift, and go to state 6

    statement    go to state 50
    conditional  go to state 10
    ifelse       go to state 11


State 33

    9 statement: INDENT flowcontrol NEWLINE . DEDENT DEDENT

    DEDENT  shift, and go to state 51


State 34

    5 statement: DEDENT conditional statement . DEDENT DEDENT

    DEDENT  shift, and go to state 52


State 35

   29 conditionalExpr: conditionalExpr EQ . conditionalExpr

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 53


State 36

   28 conditionalExpr: conditionalExpr NEQ . conditionalExpr

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 54


State 37

   25 conditionalExpr: conditionalExpr GT . conditionalExpr

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 55


State 38

   27 conditionalExpr: conditionalExpr GTE . conditionalExpr

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 56


State 39

   24 conditionalExpr: conditionalExpr LT . conditionalExpr

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 57


State 40

   26 conditionalExpr: conditionalExpr LTE . conditionalExpr

    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    BOOLEAN     shift, and go to state 19
    FLOAT       shift, and go to state 20

    conditionalExpr  go to state 58


State 41

   32 ifelse: IF conditionalExpr COLON . NEWLINE

    NEWLINE  shift, and go to state 59


State 42

   33 ifelse: ELSE COLON NEWLINE .

    $default  reduce using rule 33 (ifelse)


State 43

   31 conditional: WHILE conditionalExpr COLON . NEWLINE

    NEWLINE  shift, and go to state 60


State 44

   15 expression: LPAREN expression . RPAREN
   16           | expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . TIMES expression
   19           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDEDBY  shift, and go to state 48
    RPAREN     shift, and go to state 61


State 45

   16 expression: expression PLUS . expression

    IDENTIFIER  shift, and go to state 26
    INTEGER     shift, and go to state 27
    BOOLEAN     shift, and go to state 28
    FLOAT       shift, and go to state 29
    LPAREN      shift, and go to state 30

    expression  go to state 62


State 46

   17 expression: expression MINUS . expression

    IDENTIFIER  shift, and go to state 26
    INTEGER     shift, and go to state 27
    BOOLEAN     shift, and go to state 28
    FLOAT       shift, and go to state 29
    LPAREN      shift, and go to state 30

    expression  go to state 63


State 47

   18 expression: expression TIMES . expression

    IDENTIFIER  shift, and go to state 26
    INTEGER     shift, and go to state 27
    BOOLEAN     shift, and go to state 28
    FLOAT       shift, and go to state 29
    LPAREN      shift, and go to state 30

    expression  go to state 64


State 48

   19 expression: expression DIVIDEDBY . expression

    IDENTIFIER  shift, and go to state 26
    INTEGER     shift, and go to state 27
    BOOLEAN     shift, and go to state 28
    FLOAT       shift, and go to state 29
    LPAREN      shift, and go to state 30

    expression  go to state 65


State 49

   10 statement: IDENTIFIER EQUALS expression NEWLINE .

    $default  reduce using rule 10 (statement)


State 50

    8 statement: INDENT statement INDENT statement .

    $default  reduce using rule 8 (statement)


State 51

    9 statement: INDENT flowcontrol NEWLINE DEDENT . DEDENT

    DEDENT  shift, and go to state 66


State 52

    5 statement: DEDENT conditional statement DEDENT . DEDENT

    DEDENT  shift, and go to state 67


State 53

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   25                | conditionalExpr . GT conditionalExpr
   26                | conditionalExpr . LTE conditionalExpr
   27                | conditionalExpr . GTE conditionalExpr
   28                | conditionalExpr . NEQ conditionalExpr
   29                | conditionalExpr . EQ conditionalExpr
   29                | conditionalExpr EQ conditionalExpr .

    EQ   shift, and go to state 35
    NEQ  shift, and go to state 36
    GT   shift, and go to state 37
    GTE  shift, and go to state 38
    LT   shift, and go to state 39
    LTE  shift, and go to state 40

    EQ        [reduce using rule 29 (conditionalExpr)]
    NEQ       [reduce using rule 29 (conditionalExpr)]
    GT        [reduce using rule 29 (conditionalExpr)]
    GTE       [reduce using rule 29 (conditionalExpr)]
    LT        [reduce using rule 29 (conditionalExpr)]
    LTE       [reduce using rule 29 (conditionalExpr)]
    $default  reduce using rule 29 (conditionalExpr)


State 54

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   25                | conditionalExpr . GT conditionalExpr
   26                | conditionalExpr . LTE conditionalExpr
   27                | conditionalExpr . GTE conditionalExpr
   28                | conditionalExpr . NEQ conditionalExpr
   28                | conditionalExpr NEQ conditionalExpr .
   29                | conditionalExpr . EQ conditionalExpr

    EQ   shift, and go to state 35
    NEQ  shift, and go to state 36
    GT   shift, and go to state 37
    GTE  shift, and go to state 38
    LT   shift, and go to state 39
    LTE  shift, and go to state 40

    EQ        [reduce using rule 28 (conditionalExpr)]
    NEQ       [reduce using rule 28 (conditionalExpr)]
    GT        [reduce using rule 28 (conditionalExpr)]
    GTE       [reduce using rule 28 (conditionalExpr)]
    LT        [reduce using rule 28 (conditionalExpr)]
    LTE       [reduce using rule 28 (conditionalExpr)]
    $default  reduce using rule 28 (conditionalExpr)


State 55

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   25                | conditionalExpr . GT conditionalExpr
   25                | conditionalExpr GT conditionalExpr .
   26                | conditionalExpr . LTE conditionalExpr
   27                | conditionalExpr . GTE conditionalExpr
   28                | conditionalExpr . NEQ conditionalExpr
   29                | conditionalExpr . EQ conditionalExpr

    EQ   shift, and go to state 35
    NEQ  shift, and go to state 36
    GT   shift, and go to state 37
    GTE  shift, and go to state 38
    LT   shift, and go to state 39
    LTE  shift, and go to state 40

    EQ        [reduce using rule 25 (conditionalExpr)]
    NEQ       [reduce using rule 25 (conditionalExpr)]
    GT        [reduce using rule 25 (conditionalExpr)]
    GTE       [reduce using rule 25 (conditionalExpr)]
    LT        [reduce using rule 25 (conditionalExpr)]
    LTE       [reduce using rule 25 (conditionalExpr)]
    $default  reduce using rule 25 (conditionalExpr)


State 56

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   25                | conditionalExpr . GT conditionalExpr
   26                | conditionalExpr . LTE conditionalExpr
   27                | conditionalExpr . GTE conditionalExpr
   27                | conditionalExpr GTE conditionalExpr .
   28                | conditionalExpr . NEQ conditionalExpr
   29                | conditionalExpr . EQ conditionalExpr

    EQ   shift, and go to state 35
    NEQ  shift, and go to state 36
    GT   shift, and go to state 37
    GTE  shift, and go to state 38
    LT   shift, and go to state 39
    LTE  shift, and go to state 40

    EQ        [reduce using rule 27 (conditionalExpr)]
    NEQ       [reduce using rule 27 (conditionalExpr)]
    GT        [reduce using rule 27 (conditionalExpr)]
    GTE       [reduce using rule 27 (conditionalExpr)]
    LT        [reduce using rule 27 (conditionalExpr)]
    LTE       [reduce using rule 27 (conditionalExpr)]
    $default  reduce using rule 27 (conditionalExpr)


State 57

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   24                | conditionalExpr LT conditionalExpr .
   25                | conditionalExpr . GT conditionalExpr
   26                | conditionalExpr . LTE conditionalExpr
   27                | conditionalExpr . GTE conditionalExpr
   28                | conditionalExpr . NEQ conditionalExpr
   29                | conditionalExpr . EQ conditionalExpr

    EQ   shift, and go to state 35
    NEQ  shift, and go to state 36
    GT   shift, and go to state 37
    GTE  shift, and go to state 38
    LT   shift, and go to state 39
    LTE  shift, and go to state 40

    EQ        [reduce using rule 24 (conditionalExpr)]
    NEQ       [reduce using rule 24 (conditionalExpr)]
    GT        [reduce using rule 24 (conditionalExpr)]
    GTE       [reduce using rule 24 (conditionalExpr)]
    LT        [reduce using rule 24 (conditionalExpr)]
    LTE       [reduce using rule 24 (conditionalExpr)]
    $default  reduce using rule 24 (conditionalExpr)


State 58

   24 conditionalExpr: conditionalExpr . LT conditionalExpr
   25                | conditionalExpr . GT conditionalExpr
   26                | conditionalExpr . LTE conditionalExpr
   26                | conditionalExpr LTE conditionalExpr .
   27                | conditionalExpr . GTE conditionalExpr
   28                | conditionalExpr . NEQ conditionalExpr
   29                | conditionalExpr . EQ conditionalExpr

    EQ   shift, and go to state 35
    NEQ  shift, and go to state 36
    GT   shift, and go to state 37
    GTE  shift, and go to state 38
    LT   shift, and go to state 39
    LTE  shift, and go to state 40

    EQ        [reduce using rule 26 (conditionalExpr)]
    NEQ       [reduce using rule 26 (conditionalExpr)]
    GT        [reduce using rule 26 (conditionalExpr)]
    GTE       [reduce using rule 26 (conditionalExpr)]
    LT        [reduce using rule 26 (conditionalExpr)]
    LTE       [reduce using rule 26 (conditionalExpr)]
    $default  reduce using rule 26 (conditionalExpr)


State 59

   32 ifelse: IF conditionalExpr COLON NEWLINE .

    $default  reduce using rule 32 (ifelse)


State 60

   31 conditional: WHILE conditionalExpr COLON NEWLINE .

    $default  reduce using rule 31 (conditional)


State 61

   15 expression: LPAREN expression RPAREN .

    $default  reduce using rule 15 (expression)


State 62

   16 expression: expression . PLUS expression
   16           | expression PLUS expression .
   17           | expression . MINUS expression
   18           | expression . TIMES expression
   19           | expression . DIVIDEDBY expression

    TIMES      shift, and go to state 47
    DIVIDEDBY  shift, and go to state 48

    $default  reduce using rule 16 (expression)


State 63

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   17           | expression MINUS expression .
   18           | expression . TIMES expression
   19           | expression . DIVIDEDBY expression

    TIMES      shift, and go to state 47
    DIVIDEDBY  shift, and go to state 48

    $default  reduce using rule 17 (expression)


State 64

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . TIMES expression
   18           | expression TIMES expression .
   19           | expression . DIVIDEDBY expression

    $default  reduce using rule 18 (expression)


State 65

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . TIMES expression
   19           | expression . DIVIDEDBY expression
   19           | expression DIVIDEDBY expression .

    $default  reduce using rule 19 (expression)


State 66

    9 statement: INDENT flowcontrol NEWLINE DEDENT DEDENT .

    $default  reduce using rule 9 (statement)


State 67

    5 statement: DEDENT conditional statement DEDENT DEDENT .

    $default  reduce using rule 5 (statement)
